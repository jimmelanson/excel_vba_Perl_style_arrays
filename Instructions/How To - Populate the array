objectVariable.SetArrayFromList [string]
objectVariable.SetArray [vba array]
objectVariable.SetArrayFromRange [range object]


Assume you have already declared your object:

    Dim objArray As New clsArray
    objArray.ForceValue = True
    objArray.Delimeter = ":"

ADD CONTENT VIA METHOD No. 1
You can easily grab deta from a worksheet (user input) and populate the class object like this:

    With ThisWorkbook.Worksheets("Sheet1")
        Dim strMyStuff As String
        Dim i As Long
        For i = 0 To 25
            If .Cells(i, 1).Value <> "" Then
                objArray.Push Cells(y, 1).Value ...OR... objArray.UnShift Cells(y, 1).Value
            End If
        Next y
    End With
    
    
ADD CONTENT VIA METHOD No. 2
You can build a string of items with the proper delimeter and add the whole string at once.

    With ThisWorkbook.Worksheets("Sheet1")
        Dim strMyStuff As String
        Dim i As Long
        For i = 0 To 25
            If .Cells(i, 1).Value <> "" Then
                If strMyStuff <> "" Then
                    strMyStuff = strMyStuff & ":"
                End If
                strMyStuff = strMyStuff & Cells(y, 1).Value
            End If
        Next y
        objArray.SetArrayFromString strMyStuff
    End With
    

ADD CONTENT VIA METHOD No. 3
This method is usually done with a predetermined list of items to action your data against.
It's basically the same as method no. 2.
    
    Dim strMyStuff As String
    strMyStuff = "Apples:Pears:Oranges:Blueberries:Dragon Fruit:Raspberries"
    objArray.SetArrayFromString strMyStuff
    
    ...OR...
    
    objArray.SetArrayFromString "Apples:Pears:Oranges:Blueberries:Dragon Fruit:Raspberries"
    
    
   
ADD CONTENT VIA METHOD No. 4
You can also add content from a VBA array that you have already populated in your code. However,
the VBA array MUST be of the type: Variant

    Dim arrStuff(4) As Variant
    arrStuff(0) = "Apples"
    arrStuff(1) = "Pears"
    arrStuff(2) = "Oranges"
    arrStuff(3) = "Blueberries"
    arrStuff(4) = "Dragon Fruit"
    
    objArray.SetArray arrStuff

    
ADDING CONTENT FROM A RANGE
Probably the easiest way, with caveats, is to populate the array object from a range of cells on a worksheet.

The limitations of the class require that you add a column, and not a row. You can also add from only one
column, not multiple columns. I've been able to add several thousand cells of data at a time with this.

    Dim varArray As New clsArray
    varArray.Delimeter = ":"
    
    Dim myRange As Range
    Set myRange = ThisWorkbook.Worksheets("LargeDataTest").Range("G1:G" & ThisWorkbook.Worksheets("LargeDataTest").Cells(Rows.count, 7).End(xlUp).Row)

    varArray.SetArrayFromRange myRange
    
    Dim i As Long
    For i = 0 To varArray.LastIndex
        Debug.Print "varArray.Element(" & i & ") = " & varArray.Element(i)
    Next i
    
    
    
    
